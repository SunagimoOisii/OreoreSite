/* ===============================
   Works
   =============================== */
#works 
{
  position: relative;
}
.works-tabs 
{
  display: flex;
  gap: 4px;
  margin-bottom: 8px;
}
.works-tabs button 
{
  background: rgba(255, 255, 255, 0.8);
  color: rgba(51, 51, 51, 1);
  border: none;
  padding: 8px 16px;
  cursor: pointer;
  font-size: 1.2rem;
  backdrop-filter: blur(1px);   /* Safari/Chrome 対応 */
  -webkit-backdrop-filter: blur(1px);
  border-radius: 0;
}
.works-tabs button.active 
{
  background: rgba(51, 51, 51, 0.8);
  color: rgba(255, 255, 255, 1);
}
.works-tabs button:hover
{
  background: var(--accent);
  color: #fff;
}

/* Step2: タブの選択カーソル（小三角）と相対配置 */
.works-tabs button { position: relative; }
.works-tabs button.active::after
{
  content: "";
  position: absolute;
  left: 50%;
  bottom: -8px;
  transform: translateX(-50%);
  width: 0; height: 0;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-top: 6px solid var(--corner-marker);
}
.works-view 
{
  display: flex;
  align-items: flex-start;
  justify-content: center;
  gap: 8px;
  width: 100%;
  margin: 0 auto;
  backdrop-filter: blur(1px);   /* Safari/Chrome 対応 */
  -webkit-backdrop-filter: blur(1px);
  position: relative;
  z-index: 1;            /* 背景キャンバスより前面に */
}
.arrow 
{
  width: 0;
  height: 0;
  border-top: 20px solid transparent;
  border-bottom: 20px solid transparent;
  cursor: pointer;
  background: none;
  border-left: none;
  border-right: none;
  padding: 0;
  margin-top: calc(16px + 150px - 20px); /*画像エリア中央に矢印固定*/
}
.arrow-left 
{
  border-right: 20px solid var(--text);
}
.arrow-right 
{
  border-left: 20px solid var(--text);
}
.works-content 
{
  background: var(--card);
  color: #fff;
  padding: 16px;
  border-radius: 0;
  box-shadow: 0 2px 8px rgb(0 0 0 / 0.6);
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
  gap: 8px;
  position: relative;
  z-index: 2;            /* 内容物はさらに前面に */
}
.works-image 
{
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 300px;
  overflow: hidden;
}
.works-image img 
{
  max-width: 100%;
  max-height: 100%;
  height: auto;
  width: auto;
  object-fit: contain;
  display: block;
}
.works-desc 
{
  margin-top: 0;
}

/* ===============================
   Retro UI Chrome (Bevel + Shadow + Corner Markers)
   =============================== */
/* Works content panel: bevel + hard drop shadow */
.works-content
{
  box-shadow:
    inset 0 2px 0 var(--chrome-bevel-light),
    inset 2px 0 0 var(--chrome-bevel-light),
    inset 0 -2px 0 var(--chrome-bevel-dark),
    inset -2px 0 0 var(--chrome-bevel-dark),
    0 2px 0 var(--chrome-shadow-hard),
    0 4px 0 rgb(0 0 0 / 0.45);
}


/* Tabs: bevel; press to invert bevel */
.works-tabs button
{
  box-shadow:
    inset 0 2px 0 var(--chrome-bevel-light),
    inset 2px 0 0 var(--chrome-bevel-light),
    inset 0 -2px 0 var(--chrome-bevel-dark),
    inset -2px 0 0 var(--chrome-bevel-dark);
}
.works-tabs button:active
{
  box-shadow:
    inset 0 2px 0 var(--chrome-bevel-dark),
    inset 2px 0 0 var(--chrome-bevel-dark),
    inset 0 -2px 0 var(--chrome-bevel-light),
    inset -2px 0 0 var(--chrome-bevel-light);
}

/* Step2: Works ステータスバーと余白 */
.works-content { padding-bottom: 32px; }
.works-content::after
{
  content: "READY";
  position: absolute;
  left: 0; right: 0; bottom: 0;
  height: 22px;
  padding: 0 10px;
  display: flex;
  align-items: center;
  font-size: 0.8rem;
  color: rgba(255,255,255,0.85);
  background:
    linear-gradient(to bottom, rgba(255,255,255,0.08), rgba(0,0,0,0.15));
  border-top: 1px solid rgba(255,255,255,0.2);
}

/* ===============================
   Depth Carousel layout
   =============================== */
.works-carousel
{
  position: relative;
  width: 100%;
  perspective: 900px;
}

.works-carousel .works-content
{
  position: absolute;
  left: 50%;
  top: 0;
  transform: translateX(-50%);
  width: min(680px, 92%);
  transition: transform 300ms ease, opacity 300ms ease, z-index 300ms ease;
  will-change: transform;
}

/* center */
.works-carousel .pos-0
{
  transform: translateX(-50%) translateZ(0) rotateY(0deg) scale(1.0);
  z-index: 30;
  opacity: 1.0;
}
/* right side: 角度と後退量を強め、視線を散らさない */
.works-carousel .pos-1  { transform: translateX(calc(-50% + 600px)) translateZ(-220px) rotateY(42deg) scale(0.82); z-index: 18; opacity: 0.78; }
.works-carousel .pos-2  { transform: translateX(calc(-50% + 715px)) translateZ(-420px) rotateY(82deg) scale(0.62); z-index:  8; opacity: 0.42; }
/* left side (mirror) */
.works-carousel .pos--1 { transform: translateX(calc(-50% - 600px)) translateZ(-220px) rotateY( -42deg) scale(0.82); z-index: 18; opacity: 0.78; }
.works-carousel .pos--2 { transform: translateX(calc(-50% - 715px)) translateZ(-420px) rotateY( -82deg) scale(0.62); z-index:  8; opacity: 0.42; }

/* 非中央カードは説明文を隠す（可読性確保） */
.works-carousel .works-content:not(.is-center) .works-desc { display: none; }

/* 非中央カードはステータスバー演出を隠す（煩雑さ回避） */
.works-carousel .works-content:not(.is-center)::before,
.works-carousel .works-content:not(.is-center)::after { display: none; }

/* 非中央は操作不可にして誤クリック防止 */
.works-carousel .works-content:not(.is-center) { pointer-events: none; }

/* Works: ローディングバー（疑似要素で塗りつぶし） */
.works-content::before
{
  content: "";
  position: absolute;
  left: 0; bottom: 0;
  height: 22px;
  width: 100%;
  transform-origin: left center;
  transform: scaleX(0);
  background:
    repeating-linear-gradient(to right,
      rgba(255,255,255,0.35) 0 10px,
      rgba(255,255,255,0.15) 10px 20px);
  opacity: 0.35;
}

@keyframes bar-load {
  from { transform: scaleX(0); }
  to   { transform: scaleX(1); }
}

.works-content.loading::before
{
  transform: none;
  animation: bar-load 1.2s steps(12) 1;
}

/* Retro UI Chrome: Works Arrows (Left/Right) */
.arrow,
.arrow-left,
.arrow-right { border: none; }

.arrow 
{
  width: 40px;
  height: 40px;
  cursor: pointer;
  background: var(--card);
  border-radius: 0;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: 50; /* カルーセルカードより前面に */
  padding: 0;
  margin-top: calc(16px + 150px - 20px);
  box-shadow:
    inset 0 2px 0 var(--chrome-bevel-light),
    inset 2px 0 0 var(--chrome-bevel-light),
    inset 0 -2px 0 var(--chrome-bevel-dark),
    inset -2px 0 0 var(--chrome-bevel-dark),
    0 2px 0 var(--chrome-shadow-hard),
    0 4px 0 rgb(0 0 0 / 0.45);
}
.arrow::after
{
  content: "";
  position: absolute;
  width: 0; height: 0;
}
.arrow-left::after
{
  border-top: 8px solid transparent;
  border-bottom: 8px solid transparent;
  border-right: 12px solid var(--corner-marker);
}
.arrow-right::after
{
  border-top: 8px solid transparent;
  border-bottom: 8px solid transparent;
  border-left: 12px solid var(--corner-marker);
}
.arrow:hover { filter: brightness(1.05); }
.arrow-left:hover::after { border-right-color: #fff; }
.arrow-right:hover::after { border-left-color: #fff; }
.arrow:active
{
  box-shadow:
    inset 0 2px 0 var(--chrome-bevel-dark),
    inset 2px 0 0 var(--chrome-bevel-dark),
    inset 0 -2px 0 var(--chrome-bevel-light),
    inset -2px 0 0 var(--chrome-bevel-light),
    0 2px 0 var(--chrome-shadow-hard),
    0 4px 0 rgb(0 0 0 / 0.45);
}
.arrow:focus-visible
{
  outline: 2px dashed var(--corner-marker);
  outline-offset: 2px;
}

